const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys'); // two dots go upper to the server directory

const User = mongoose.model('users');
passport.serializeUser((user, done) => {
    done(null, user.id); // the user.id here represents the record's id generated by mongoDB
});

passport.deserializeUser((id, done) => {
    User.findById(id).then((user) => {
        done(null, user);
    });
});


// inform passport of how to use GoogleStrategy in the application
passport.use(
    new GoogleStrategy({
        clientID: keys.googleClientID,
        clientSecret: keys.googleClientSecret,
        callbackURL: '/auth/google/callback'
    }, 
    (accessToken, refreshToken, profile, done) => {
        User.findOne({ googleID: profile.id }).then((existingUser) => {
            if (existingUser) {
                // already have a record with the given profile ID
                done(null, existingUser); // done(errorObject, userRecord);
            } else {
                // this is a new user
                new User({ googleID: profile.id }).save().then((user) => {
                    done(null, user);
                });
            }
        });
    })
);